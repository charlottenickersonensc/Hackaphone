{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Routes,Route}from'react-router-dom';import axios from'axios';import{CssBaseline,ThemeProvider,createTheme,Box}from'@mui/material';import Header from'./components/Header';import Dashboard from'./pages/Dashboard';import VisualizerPage from'./pages/VisualizerPage';import NotFound from'./pages/NotFound';import'./App.css';// Création du thème sombre pour notre application\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const darkTheme=createTheme({palette:{mode:'dark',primary:{main:'#90caf9'},secondary:{main:'#f48fb1'},background:{default:'#121212',paper:'#1e1e1e'}}});function App(){// État pour stocker les visualisations disponibles\nconst[visualizations,setVisualizations]=useState([]);// État pour stocker le statut des visualisations\nconst[status,setStatus]=useState({});// État pour suivre si les données sont en cours de chargement\nconst[loading,setLoading]=useState(true);// Récupérer la liste des visualisations au chargement de l'application\nuseEffect(()=>{// Fonction pour charger les visualisations depuis l'API\nconst fetchVisualizations=async()=>{try{setLoading(true);const response=await axios.get('/api/visualizations');setVisualizations(response.data);// Récupérer également le statut actuel des visualisations\nconst statusResponse=await axios.get('/api/status');setStatus(statusResponse.data);}catch(error){console.error('Erreur lors du chargement des visualisations:',error);}finally{setLoading(false);}};fetchVisualizations();// Mettre en place un intervalle pour la mise à jour du statut des visualisations\nconst statusInterval=setInterval(async()=>{try{const statusResponse=await axios.get('/api/status');setStatus(statusResponse.data);}catch(error){console.error('Erreur lors de la mise à jour du statut:',error);}},5000);// Mise à jour toutes les 5 secondes\n// Nettoyer l'intervalle lorsque le composant est démonté\nreturn()=>clearInterval(statusInterval);},[]);return/*#__PURE__*/_jsxs(ThemeProvider,{theme:darkTheme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',minHeight:'100vh'},children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,padding:3},children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Dashboard,{visualizations:visualizations,status:status,loading:loading})}),/*#__PURE__*/_jsx(Route,{path:\"/visualizer/:id\",element:/*#__PURE__*/_jsx(VisualizerPage,{visualizations:visualizations,status:status})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","axios","CssBaseline","ThemeProvider","createTheme","Box","Header","Dashboard","VisualizerPage","NotFound","jsx","_jsx","jsxs","_jsxs","darkTheme","palette","mode","primary","main","secondary","background","default","paper","App","visualizations","setVisualizations","status","setStatus","loading","setLoading","fetchVisualizations","response","get","data","statusResponse","error","console","statusInterval","setInterval","clearInterval","theme","children","sx","display","flexDirection","minHeight","flexGrow","padding","path","element"],"sources":["/Users/charlottenickerson/introprogrammationcsharp/musicproject/sadnessnewgit/Hackaphone/interface_web/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { \n  CssBaseline, \n  ThemeProvider, \n  createTheme, \n  Box \n} from '@mui/material';\nimport Header from './components/Header';\nimport Dashboard from './pages/Dashboard';\nimport VisualizerPage from './pages/VisualizerPage';\nimport NotFound from './pages/NotFound';\nimport './App.css';\n\n// Création du thème sombre pour notre application\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9',\n    },\n    secondary: {\n      main: '#f48fb1',\n    },\n    background: {\n      default: '#121212',\n      paper: '#1e1e1e',\n    },\n  },\n});\n\nfunction App() {\n  // État pour stocker les visualisations disponibles\n  const [visualizations, setVisualizations] = useState([]);\n  // État pour stocker le statut des visualisations\n  const [status, setStatus] = useState({});\n  // État pour suivre si les données sont en cours de chargement\n  const [loading, setLoading] = useState(true);\n  \n  // Récupérer la liste des visualisations au chargement de l'application\n  useEffect(() => {\n    // Fonction pour charger les visualisations depuis l'API\n    const fetchVisualizations = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('/api/visualizations');\n        setVisualizations(response.data);\n        \n        // Récupérer également le statut actuel des visualisations\n        const statusResponse = await axios.get('/api/status');\n        setStatus(statusResponse.data);\n      } catch (error) {\n        console.error('Erreur lors du chargement des visualisations:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchVisualizations();\n    \n    // Mettre en place un intervalle pour la mise à jour du statut des visualisations\n    const statusInterval = setInterval(async () => {\n      try {\n        const statusResponse = await axios.get('/api/status');\n        setStatus(statusResponse.data);\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour du statut:', error);\n      }\n    }, 5000); // Mise à jour toutes les 5 secondes\n    \n    // Nettoyer l'intervalle lorsque le composant est démonté\n    return () => clearInterval(statusInterval);\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n        <Header />\n        <Box sx={{ flexGrow: 1, padding: 3 }}>\n          <Routes>\n            <Route \n              path=\"/\" \n              element={\n                <Dashboard \n                  visualizations={visualizations} \n                  status={status}\n                  loading={loading} \n                />\n              } \n            />\n            <Route \n              path=\"/visualizer/:id\" \n              element={\n                <VisualizerPage \n                  visualizations={visualizations} \n                  status={status}\n                />\n              } \n            />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}